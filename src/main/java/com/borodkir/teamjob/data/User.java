package com.borodkir.teamjob.data;

import jakarta.persistence.*;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.ToString;

import java.util.HashSet;
import java.util.Set;

/**
 * Represents a user entity mapped to the 'users' table in the database.
 * <ul>
 *   <li>id: The primary key of the 'users' table.</li>
 *   <li>username</li>
 *   <li>email</li>
 *   <li>password: Hashed password</li>
 *   <li>roles: A set of roles associated with the user.</li>
 * </ul>
 * This entity includes auditing fields (createdDate, createdBy, lastModifiedDate, lastModifiedBy)
 * inherited from the Auditable base class.
 */
@Data
@Entity
@Table(name = "users")
@ToString(exclude = {"tags"})
@EqualsAndHashCode(callSuper = true)
public class User extends Auditable {

    /**
     * The primary key of the 'users' table.
     * This value is automatically generated by the database.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    /**
     * The username of the user.
     * This field is unique and cannot be null.
     */
    @Column(unique = true, nullable = false)
    private String username;

    /**
     * The email address of the user.
     * This field is unique and cannot be null.
     */
    @Column(unique = true, nullable = false)
    private String email;

    /**
     * The password of the user.
     * This field can be nullable and does not need to be unique.
     */
    @Column
    private String password;

    @ManyToMany(fetch = FetchType.EAGER)
    @JoinTable(
            name = "user_roles",
            joinColumns = @JoinColumn(name = "user_id"),
            inverseJoinColumns = @JoinColumn(name = "role_id"))
    private Set<Role> roles = new HashSet<>();

    @ElementCollection
    @CollectionTable(name = "user_tags", joinColumns = @JoinColumn(name = "user_id"))
    @Column(name = "tag")
    private Set<String> tags = new HashSet<>();


    public void addRole(Role userRole) {
        this.roles.add(userRole);
    }
}
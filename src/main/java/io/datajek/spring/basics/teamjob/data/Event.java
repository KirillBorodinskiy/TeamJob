package io.datajek.spring.basics.teamjob.data;

import jakarta.persistence.*;
import lombok.Data;
import org.hibernate.annotations.Type;

import java.time.LocalDateTime;
import java.util.HashSet;
import java.util.Set;

/**
 * Represents an event entity mapped to the 'events' table in the database.
 * <ul>
 *   <li>id: The primary key of the 'events' table.</li>
 *   <li>user: The user associated with the event.</li>
 *   <li>title</li>
 *   <li>description</li>
 *   <li>startTime: LocalDateTime</li>
 *   <li>endTime: LocalDateTime.</li>
 *   <li>location: In format ... </li>
 *   <li>isRecurring</li>
 * </ul>
 */
@Data
@Entity
@Table(name = "events")
public class Event {

    /**
     * The primary key of the 'events' table.
     * This value is automatically generated by the database.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    /**
     * The user associated with the event.
     * This field is a foreign key referencing the 'users' table.
     */
    @ManyToOne
    @JoinColumn(name = "user_id", nullable = false)
    private User user;

    @Column(nullable = false)
    private boolean isRecurring;

    @Column
    private LocalDateTime isRecurringEndDate;

    @ManyToOne
    @JoinColumn(name = "room_id", nullable = false)
    private Room room;

    /**
     * The title of the event.
     * This field can be null.
     */
    @Column(nullable = false)
    private String title;

    /**
     * The description of the event.
     * This field can be null.
     */
    @Column
    private String description;

    /**
     * The start time of the event.
     * This field cannot be null.
     */
    @Column(nullable = false)
    private LocalDateTime startTime;

    /**
     * The end time of the event.
     * This field cannot be null.
     */
    @Column(nullable = false)
    private LocalDateTime endTime;

    /**
     * The tags associated with the event.
     * This field is stored as a PostgreSQL array in the database.
     */
    @Type(io.hypersistence.utils.hibernate.type.array.ListArrayType.class)
    @Column(name = "tags", columnDefinition = "text[]")
    private Set<String> tags = new HashSet<>();
}